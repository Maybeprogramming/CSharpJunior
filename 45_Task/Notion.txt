четверг, 10 апреля 2025, 15:43
Артемий Азаренков
Доработать

+1 - IDamageProvider/IHealable/IClone - методы интерфейсов нигде не используются. 
	Сейчас в них нет смысла

2 - Name и т.п. свойства - лучше сразу сделайте автореализуемое свойство, 
	убрав поле, а проверку делать в конструкторе класса. 
	Это сильно увеличит читаемость 

	Name =  GetNotEmptyString(name, "Ошибка! Имя не может быть пустым");; и т.д.

+3 - Druid у друида - есть дубляж в виде вызова base.Attack(target); 
	Просто вынесите один из за условие 

4 - private protected FighterSpecification _baseSpecification; 
	- а зачем поле?

+5 - Методы, использующиеся не во всех дочерних классах, 
	не должны быm, в родительском. нарушение LSP

+6 - TryTakeDamage - а зачем возвращать bool? TryHealing аналогично

7 - Очередность в классе, сначала поля, конструктор, потом свойства и методы. 
	И только после этого в каждом блоке сортировка от публичного до приватного.
	- чтобы подробнее рассмотреть очередность в классе посмотрите на https://clck.ru/at8vs 

8 - FightersFactory - супер сложно конечно все выглядит.  
	ConfigurateFightersSpecification есть дубляж. 
	Если выборка, например, жизни, складывается из конкретных чисел, 
	так сделайте метод, в котором эти числа и будут находится, 
	а метод сразу будет нужное значение возвращать, 
	уже станет симпатичнее. 
	Для _nameWarrior и _descriptionWarrior можно сделать или отдельны класс, 
	чтобы сгруппировать данные, или словарь. 
	Ключ - тип, значение - информация. Так же сильно улучшит

9 - _minHealth и т.д. - поля должны описывать класс и не являться буфером данных

+10 - BeginFightMenu - это не меню, это команды

+11 - BeginFighters - дубляж кода в методе 

+12 - if (randomNumber >= 5) -  магическое число